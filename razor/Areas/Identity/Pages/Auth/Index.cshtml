@page
@model razor.Pages.Auth.IndexModel

@{
    ViewData["Title"] = "List Usernames";
}

<h1>List Usernames</h1>
<form asp-page="./Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name:
            <input type="text" name="SearchString" value="@Model.CurrentFilter" />
            <input type="submit" value="Search" class="btn btn-primary" /> |
            <a asp-page="./Index">Back to full List</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.UsernameSort"
                   asp-route-currentFilter="@Model.CurrentFilter">                                  
                Username
                </a>                
            </th> 
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Usernames) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            
            <td>
                 <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

@{
    var prevDisabled = !Model.Usernames.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Usernames.HasNextPage ? "disabled" : "";
}

<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Usernames.PageIndex - 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @prevDisabled">
    Previous
</a>
<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Usernames.PageIndex + 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @nextDisabled">
    Next
</a>