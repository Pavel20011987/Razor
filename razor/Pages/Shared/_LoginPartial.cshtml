@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            Hello @User.Identity.Name
            </a>
            <div class="dropdown-menu" aria-labelledby="navbarDropdown">

                @if (User.IsInRole("Admin"))
                {
                    <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Add Admin</a>
                    <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register2">Add User</a>
                    <div class="dropdown-divider"></div>
                    <a class="nav-link text-dark" asp-area="Identity" asp-page="/Auth/Index">List Users</a>                    
                    <div class="dropdown-divider"></div>
                }

                <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/", new { area = "" })" method="post" >
                    <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
                </form>
            </div>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>